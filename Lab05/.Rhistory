chips <- 5
guests <- 8;
self <- c(7, 6, 5, 1, 2, 3, 4);
Penny <- c(5, 7, 6, 3, 1, 2, 4);
Jenny <- c(4, 3, 2, 7, 6, 5, 1);
Lenny <- c(1, 7, 3, 4, 6, 5, 2);
Stewie <- c(6, 7, , 4, 3, 1, 2);
self <- c(7, 6, 5, 1, 2, 3, 4);
Penny <- c(5, 7, 6, 3, 1, 2, 4);
Jenny <- c(4, 3, 2, 7, 6, 5, 1);
Lenny <- c(1, 7, 3, 4, 6, 5, 2);
Stewie <- c(6, 7, 5, 4, 3, 1, 2);
Rankings <- cbind(self, Penny, Jenny, Lenny, Stewie);
Rankings
str(Rankings)
str(PennyIV)
PennyIV = Penny[4]
str(PennyIV)
str(Penny)
Rankings_DF = as.data.frame(Rankings)
dim(Rankings)
dim(Rankings_DF)
str(Rankings)
str(Rankings_DF)
typeof(Rankings)
typeof(Rankings_DF)
Rankings == Rankings_DF
help("row.names")
row.names(Rankings) <-
EpisodeNames <- c("I", "II", "III", "IV", "V", "VI", "VII");
row.names(Rankings) <- EpisodeNames
Rankings
Rankings[4:6,]
Rankings[c(2,5,7),]
Rankings[c(4,6), c(2,3,5)] # Penny, Jenny, and Stewie's rankings for episodes 4,6
Rankings["III", "Penny"]
str(Rankings_DF)
Rankings_DF$Lenny
data <- read.csv(Vector1.csv)
data <- read.csv(CompBioSandbox/CompBio_on_git/Labs//Lab05Vector1.csv)
data <- read.csv(CompBioSandbox/CompBio_on_git/Labs/Lab05/Vector1.csv)
data <- read.csv(/CompBioSandbox/CompBio_on_git/Labs/Lab05/Vector1.csv)
data <- read.csv(CompBioSandbox/CompBio_on_git/Labs/Lab05/Vector1.csv)
getwd()
setwd()
setwd('/home')
getwd
getwd()
setwd('darin/Documents/CompBioLabsAndHomework/Lab05/')
data <- read.csv('/home/darin/compBioSandbox/CompBio_on_git/Labs/Lab05/Vector1.csv')
for(i in 1:length(data)){
if (is.na(data[i]) == T)
data[i] <- 0
}
for(i in 1:length(data)){
if (is.na(data[i]) == T){
data[i] <- 0
}
}
for(i in 1:length(data)){
if (is.na(x[i]) == TRUE){
x[i] <- 0
}
}
for(i in 1:length(data)){
if (is.na(data[i]) == TRUE){
data[i] <- 0
}
}
for(i in 1:length(data)){
if (is.na(data[i])){
data[i] <- 0
}
}
data[i]
source('~/Documents/CompBioLabsAndHomework/Lab05/Brock_Lab05.R')
View(data)
View(data)
source('~/Documents/CompBioLabsAndHomework/Lab05/Brock_Lab05.R')
for(i in 1:length(data)){
if (data[i] < 0){
data[i] <- NA
}
}
which(is.na(data))
data[which(is.na(data))]<- 0
which(is.na(data))
which(data > 50 && data < 100)
which(data > 50)
which(data > 50 && < 100)
which(data > 50 && data < 100)
data
clc
clear
which(data > 50 && data < 100)
which(data < 100)
which(data > 50 && data < 100)
which((data > 50) && (data < 100))
which((data > 50) & (data < 100))
newvector<- data[which((data > 50) & (data < 100))]
data2 <- read.csv('/home/darin/compBioSandbox/CompBio_on_git/Labs/Lab04/CO2_data_cut_paste.csv')
column.names(data2)
row.names(data2)
data2["gas"]
data2
data2["gas"]
data2[,"gas"]
data2[,"Gas"]
gas_indices <- which(data2[,"Gas"] > 0)
data2["Year",gas_indices[1]]
gas_indices[1]
data2[gas_indices[1], "Year"]
data2[gas_indices[1], "Year"]
data2[,"Total"]
years_between_200_300 <- data2[which((data2[,"Total"]>200) & (data2[,"Total"]<300), "Year"]
total_indices <- which((data2[,"Total"]>200)&(data2[,"Total"]<300))
years_between_200_300 <- data2[total_indices, "Year"]
years_between_200_300
totalGenerations <- 1000
initPrey <- 100 # initial prey abundance
initPred <- 10 # initial predator abundance
a <- 0.01 # attack rate
r <- 0.2 # growth rate of prey
m <- 0.05 # mortality rate of predators
k <- 0.1 # conversion constant of prey into predators
# Initialize vectors
time < 1:totalGenerations
n <- rep(initPrey,length(time))
p <- rep(initPred, length(time))
# Set up for loop for calculations
for(i in 2:length(time)){
n[i] <- n[i-1] + (r*n[i-1]) - (a*n[i-1]*p[i-1])
p[i] <- p[i-1] + (k*a*n[i-1]*p[i-1]) - (m*p[i-1])
# Check each loop to see if populations are negative
if(n[i] < 0){
n[i] <- 0
}
if(p[i] < 0 ){
p[i] <- 0
}
}
i
source('~/Documents/CompBioLabsAndHomework/Lab05/Brock_Lab05.R')
source('~/Documents/CompBioLabsAndHomework/Lab05/Brock_Lab05.R')
plot(time, n)
lines(time, p)
source('~/Documents/CompBioLabsAndHomework/Lab05/Brock_Lab05.R')
source('~/Documents/CompBioLabsAndHomework/Lab05/Brock_Lab05.R')
source('~/Documents/CompBioLabsAndHomework/Lab05/Brock_Lab05.R')
source('~/Documents/CompBioLabsAndHomework/Lab05/Brock_Lab05.R')
